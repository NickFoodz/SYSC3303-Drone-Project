Contributions:

Iteration 1:
Thomas Imbert
- Sequence Diagrams

Elton Kong
- Class UML Diagram

Nick Fuda
- DroneSubsystem.java, FireIncidentSubsystem.java, Scheduler.java, debugging, one drone test

Hanyoung Chung (John)
- Code review, debugging, test classes



Iteration 2:
Thomas Imbert
- Scheduler scheduling code
- Simulation code and integration

Elton Kong
- Sequence diagram and code for drone subsystem
- Code Review and documentation review

Nick Fuda
- DroneSubsystem state machine, code debugging and drone helper class
- Design of state machine and helping with scheduler algorithm and simulation integration

Hanyoung Chung (John)
- Code review, debugging, test classes
- Helping with simulation integration

Bryson Kushner:
- Class UML and State Machine diagrams


Iteration 3:
Thomas Imbert
- Simulation code and integration
- Sequence Diagram
- State Machine Diagrams

Elton Kong
- Sequence diagram
- Code Review and documentation review

Nick Fuda
- Each class updated to UDP
- Some adjustments to the methods to run async
- Multithreading for drones and scheduler ports
- Documentation

Hanyoung Chung (John)
- Code review, debugging, test classes

Bryson Kushner:
- Class UML

Iteration 4:
Thomas Imbert
- Fault injection and handling help
- State diagram

Elton Kong
- Sequence diagram
- Drone movement/coords calculation

Nick Fuda
- Drone movement/coords calculation
- Code review, test classes

Hanyoung Chung (John)
- Code review, test classes

Bryson Kushner:
- Class UML
- Fault handling
